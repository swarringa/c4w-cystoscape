buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id 'groovy'
    id 'maven-publish'
    id "com.github.lburgazzoli.karaf" version "0.5.3-SNAPSHOT"
    id "biz.aQute.bnd.builder" version "6.2.0"
}


group 'nl.practicom'
version '1.0'

ext {
    osgiVersion = '4.2.0'
    cw4MultiDllVersion = '1.0'
    c4wTxaVersion = '1.0'
    cytoscapeVersion = '3.9.0'
    slf4jVersion = '1.6.1'
    groovyVersion = '2.4.17'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = 'Cytoscape releases'
        url = 'https://nrnb-nexus.ucsd.edu/repository/cytoscape_releases/'
    }
    maven {
        name = 'Cytoscape snapshots'
        url = 'https://nrnb-nexus.ucsd.edu/repository/cytoscape_snapshots/'
    }
}


configurations {
    // Unresolvable transitive compile dependencies to be excluded
    implementation {
        exclude group: "cytoscape-temp"
        // See https://issues.apache.org/jira/browse/KARAF-6462
        exclude group: 'org.knopflerfish.kf6'
    }

    bundle {
        // Only put our own stuff in the bundle
        transitive = false
    }
}

dependencies {
    // Groovy
    implementation "org.codehaus.groovy:groovy:$groovyVersion"
    // Cytoscape
    implementation "org.cytoscape:swing-application-api:$cytoscapeVersion"
    implementation "org.cytoscape:app-api:$cytoscapeVersion"
    implementation "org.cytoscape:work-api:$cytoscapeVersion"
    implementation "org.cytoscape:work-impl:$cytoscapeVersion"
    implementation "org.cytoscape:work-swing-api:$cytoscapeVersion"
    implementation "org.cytoscape:work-swing-impl:$cytoscapeVersion"
    implementation "org.cytoscape:work-headless-impl:$cytoscapeVersion"
    implementation "org.cytoscape:service-api:$cytoscapeVersion"
    implementation "org.cytoscape:io-api:$cytoscapeVersion"
    implementation "org.cytoscape:io-impl:$cytoscapeVersion"
    // OSGI (Karaf)
    implementation "org.osgi:org.osgi.core:$osgiVersion"
    implementation "org.osgi:org.osgi.util.tracker:1.5.2"
    implementation "org.slf4j:slf4j-api:1.7.28"
    // Mine
    implementation "nl.practicom:c4w-multidll:$cw4MultiDllVersion"
    implementation "nl.practicom:c4w-txa:$c4wTxaVersion"
    // Other
    implementation 'com.google.guava:guava:30.1.1-jre'
    // Testing
    testImplementation "org.slf4j:slf4j-simple:1.7.28"
    testImplementation "junit:junit:4.12"

    // Configuration specifies stuff to be bundled. This is to prevent
    // the inclusion of the cytoscape dependencies
    bundle "nl.practicom:c4w-multidll:$cw4MultiDllVersion"
    bundle "nl.practicom:c4w-txa:$c4wTxaVersion"
    bundle "org.codehaus.groovy:groovy:$groovyVersion"
}


jar {
    // This can be placed in a bnd.bnd file. But it is more convenient
    // to keep everything together here
    bundle {
        bnd (
            'Bundle-Name'           : 'Practicom :: Cytoscape TXA analysis',
            'Bundle-SymbolicName'   : 'nl.practicom.c4w.cytoscape',
            'Bundle-Activator'      : 'nl.practicom.c4w.cytoscape.CyActivator',
            'Export-Package'        : "nl.practicom.c4w.cytoscape.*;ver=${version}" ,
            '-exportcontents'       : 'nl.practicom.c4w.cytoscape.*'
        )
    }
}

/*
    Generates the Karaf feature repository xml file
    See https://karaf.apache.org/manual/latest/provisioning
*/
karaf {
    features {
        // name of the feature 'repository' itself
        name = 'practicom'

        // includes the jar produced by this project
        // Problem: this will use the rootProject.name and generates
        // mvn:nl.practicom/cytoscape-txa-analysis/0.1 as the bundle name.
        includeProject = true

        // include all dependencies from the 'bundle' configuration
        feature {
            name = 'cytoscape-txa-analysis'
            configurations 'bundle'
        }
    }
}

/* Generate the OSGI manifest. See also the bnd instructions on jar above */
task bundle(type: aQute.bnd.gradle.Bundle) {
    from sourceSets.main.output
}

publishing {
    publications {
        /* The bundle jar */
        osgiBundle(MavenPublication){
            from components.java
            // This what we want but it won't work with the
            // karaf feature generator above
            //artifactId 'c4w-cytoscape'
        }
        /* The karaf feature repository */
        osgiFeature(MavenPublication){
            artifact("build/karaf/features/${rootProject.name}-${version}-features.xml") {
                artifactId 'cytoscape-txa-analysis'
		classifier 'features'
		//type 'xml'
		//pom { packaging 'xml' }
            }
        }
    }
}

task publishAllToMavenLocal {
    dependsOn gradle.includedBuilds*.task(':publishToMavenLocal'), publishToMavenLocal
}

task cleanAll {
    dependsOn gradle.includedBuilds*.task(':clean')
    dependsOn clean
}
